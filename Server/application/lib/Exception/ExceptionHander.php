<?php
/**
 * Created by PhpStorm.
 * User: vb
 * Date: 2018/3/14
 * Time: 13:09
 */

namespace app\lib\Exception;
use Exception;
use think\exception\Handle;
use think\Log;
use think\Request;

class ExceptionHander extends Handle
{
   private $code;
   private $msg;
   private $errorCode;

   public function render(Exception $e)
   {
       if($e instanceof BaseException)
       {
           $this->code=$e->code;
           $this->msg=$e->msg;
           $this->errorCode=$e->errorCode;

       }
       else
       {
           if(config('app_debug'))
           {
               return parent::render($e); // TODO: Change the autogenerated stub
           }
           $this->code='500';
           $this->msg='Sorry,we make a mistak[]';
           $this->errorCode='999';
           $this->recordErrorLog($e);
       }
       $request=Request::instance();
       $result=[
           'msg'  => $this->msg,
           'error_code' => $this->errorCode,
           'request_url' => $request = $request->url()
       ];
       return json($result, $this->code);//后面的参数用于指定网页的响应码

   }


    /*
     * 将异常写入日志
     */
    private function recordErrorLog(Exception $e)
    {
        Log::init([
            'type'  =>  'File',
            'path'  =>  LOG_PATH,
            'level' => ['error']
        ]);
//        Log::record($e->getTraceAsString());
        Log::record($e->getMessage(),'error');
    }


}